/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_GRAVE {
            bindings = <&ht LS(GRAVE) GRAVE>;
            key-positions = <1 2>;
        };

        combo_TAB {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        combo_ESC {
            bindings = <&kp ESC>;
            key-positions = <13 14>;
        };

        combo_BACKSPACE {
            bindings = <&kp BACKSPACE>;
            key-positions = <15 16>;
        };

        combo_DELETE {
            bindings = <&kp DELETE>;
            key-positions = <37 16 15>;
        };

        combo_ENTER {
            bindings = <&kp ENTER>;
            key-positions = <16 17>;
        };

        combo_MINUS {
            bindings = <&ht LS(UNDERSCORE) MINUS>;
            key-positions = <16 17 18>;
        };

        combo_PLUS {
            bindings = <&ht LS(EQUAL) EQUAL>;
            key-positions = <16 18>;
        };

        combo_LEFT_PARENTHESIS {
            bindings = <&ht RIGHT_PARENTHESIS LEFT_PARENTHESIS>;
            key-positions = <7 16>;
        };

        combo_LEFT_BRACE {
            bindings = <&ht RIGHT_BRACE LEFT_BRACE>;
            key-positions = <8 16>;
        };

        combo_LEFT_BRACKET {
            bindings = <&ht RIGHT_BRACKET LEFT_BRACKET>;
            key-positions = <16 27>;
        };

        combo_BACKSLASH {
            bindings = <&ht LS(BSLH) BACKSLASH>;
            key-positions = <5 16>;
        };

        combo_SINGLE_QUOTE {
            bindings = <&ht LS(SINGLE_QUOTE) SQT>;
            key-positions = <7 8>;
        };

        combo_caps_word {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };
    };

    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "ht";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        hrm: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        td: td {
            compatible = "zmk,behavior-tap-dance";
            label = "TD";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp K_APPLICATION>;
        };

        thumb: thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB";
            bindings = <&sl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
		 *
		 * ,----------------------------------.                      ,----------------------------------.
		 * |   0  |   1  |   2  |   3  |   4  |                      |   5  |   6  |   7  |   8  |   9  |
		 * |------+------+------+------+------|                      |------+------+------+------+------|
		 * |   10 |  11  |   12 |  13  |  14  |                      |  15  |   16 |  17  |  18  |  19  |
		 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
		 * |  20  |  21  |   22 |  23  |  24  |  |  34 |    | 35  |  |  25  |   26  |  27  |  28 |  29  |
		 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
		 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
		 *          | 30  |   |  31  | 32   | 33   |            |  36   | 37 | 38   |  |   39  |
		 *          `-----'   `--------------------'            `--------------------'   `-----'
		 */

            bindings = <
&kp Q             &kp W            &kp E         &kp R              &kp T               &kp Y        &kp U              &kp I           &kp O              &kp P
&kp A             &hrm LEFT_ALT S  &hrm LCTRL D  &hrm LEFT_SHIFT F  &kp G               &kp H        &hrm LEFT_SHIFT J  &hrm LCTRL K    &hrm LEFT_ALT L    &hrm LEFT_WIN SEMICOLON
&kp Z             &kp X            &kp C         &kp V              &kp B               &kp N        &kp M              &kp COMMA       &kp DOT            &kp FSLH
&kp C_PLAY_PAUSE  &lt 3 DEL        &lt 1 SPACE   &kp TAB            &kp C_PLAY_PAUSE    &kp LG(TAB)  &kp LEFT_WIN            &thumb 2 SPACE  &kp K_APPLICATION  &kp LG(TAB)
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP K_VOLUME_DOWN>,
                <&inc_dec_kp LG(LC(RIGHT)) LG(LC(LEFT))>;
        };

        navnum_layer {
            /* NAVNUM
		 *
		 * ,----------------------------------.                      ,----------------------------------.
		 * |      | PgUp |  UP  | PgDn |      |                      |   /  |   7  |   8  |   9  |   -  |
		 * |------+------+------+------+------|                      |------+------+------+------+------|
		 * | Home | Left | Down | Right| End  |                      |   =  |   4  |   5  |   6  |   +  |
		 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
		 * |      |      |  INS |      |      |  |  2  |    |  3  |  |   0  |   1  |   2  |   3  |   *  |
		 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
		 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
		 *          |  1  |   | DEL | SPACE | MO(3)|            |  ESC  | BS | ENTER |   |  4  |
		 *          `-----'   `--------------------'            `--------------------'   `-----'
		 */

            bindings = <
&trans            &kp HOME     &kp UP       &kp END         &kp C_NEXT          &kp FSLH     &kp N7   &kp N8    &kp N9     &kp MINUS
&kp HOME          &kp LEFT     &kp DOWN     &kp RIGHT       &kp C_PLAY_PAUSE    &kp EQUAL    &kp N4   &kp N5    &kp N6     &kp PLUS
&trans            &kp PAGE_UP  &kp INS      &kp DOWN_ARROW  &kp C_PREV          &kp N0       &kp N1   &kp N2    &kp N3     &kp ASTERISK
&kp C_PLAY_PAUSE  &lt 3 DEL    &lt 1 SPACE  &kp TAB         &kp C_PLAY_PAUSE    &kp LG(TAB)  &kp ESC  &kp BSPC  &lt 2 RET  &kp N4
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp LG(LC(RIGHT)) LG(LC(LEFT))>;
        };

        function_layer {
            /* SYM
		 *
		 * ,----------------------------------.                      ,----------------------------------.
		 * |   %  |   @  |   [  |   ]  |   \  |                      |      |      |   ^  |      |      |
		 * |------+------+------+------+------|                      |------+------+------+------+------|
		 * |   #  |   !  |   (  |   )  |   |  |                      |   _  |   '  |   "  |   ~  |   `  |
		 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
		 * |   $  |      |   {  |   }  |   &  |  |  2  |    |  3  |  |      |      |      |      |      |
		 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
		 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
		 *          |  1  |   | DEL | SPACE | TAB  |            |  ESC  | BS | ENTER |   |  4  |
		 *          `-----'   `--------------------'            `--------------------'   `-----'
		 */

            bindings = <
&bt BT_SEL 0    &mkp MB1   &kp GRAVE  &mkp MB2   &kp GRAVE    &kp GRAVE  &kp F9     &kp F10    &kp F11    &kp F12
&bt BT_SEL 1    &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE    &kp GRAVE  &kp F5     &kp F6     &kp F7     &kp F8
&bt BT_SEL 2    &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE    &kp GRAVE  &kp F1     &kp F2     &kp F3     &kp F4
&bt BT_CLR_ALL  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE    &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE
            >;
            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP K_VOLUME_DOWN>,
                <&inc_dec_kp LG(LC(RIGHT)) LG(LC(LEFT))>;
        };

        alt_layer {
            /* FUNC
		 *
		 * ,----------------------------------.                      ,----------------------------------.
		 * |      |      | BTCLR|      | Reset|                      | Reset|  F7  |  F8  |  F9  |  F11 |
		 * |------+------+------+------+------|                      |------+------+------+------+------|
		 * |  BT0 |  BT1 |  BT2 |  BT3 |  BT4 |                      |      |  F4  |  F5  |  F6  |  F12 |
		 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
		 * |      |      |      |      |      |  |  2  |    |  3  |  |  F10 |  F1  |  F2  |  F3  |  F13 |
		 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
		 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
		 *          |  1  |   | DEL | SPACE | TAB  |            |  ESC  | BS | ENTER |   |  4  |
		 *          `-----'   `--------------------'            `--------------------'   `-----'
		 */

            bindings = <
&kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE    &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE
&kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE    &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE
&kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE    &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE
&kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE    &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE  &kp GRAVE
            >;
            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP K_VOLUME_DOWN>,
                <&inc_dec_kp LG(LC(RIGHT)) LG(LC(LEFT))>;
        };
    };
};
